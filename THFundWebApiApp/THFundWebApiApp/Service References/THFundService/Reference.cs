//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ThomsonReuters.Eikon.THFundWebApiApp.THFundService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="response", Namespace="http://schemas.datacontract.org/2004/07/WeerutTestWCFService.DTO")]
    [System.SerializableAttribute()]
    public partial class response : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ThomsonReuters.Eikon.THFundWebApiApp.THFundService.fund fundField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ThomsonReuters.Eikon.THFundWebApiApp.THFundService.fund[] fundsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string messageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string error {
            get {
                return this.errorField;
            }
            set {
                if ((object.ReferenceEquals(this.errorField, value) != true)) {
                    this.errorField = value;
                    this.RaisePropertyChanged("error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public ThomsonReuters.Eikon.THFundWebApiApp.THFundService.fund fund {
            get {
                return this.fundField;
            }
            set {
                if ((object.ReferenceEquals(this.fundField, value) != true)) {
                    this.fundField = value;
                    this.RaisePropertyChanged("fund");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public ThomsonReuters.Eikon.THFundWebApiApp.THFundService.fund[] funds {
            get {
                return this.fundsField;
            }
            set {
                if ((object.ReferenceEquals(this.fundsField, value) != true)) {
                    this.fundsField = value;
                    this.RaisePropertyChanged("funds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                if ((object.ReferenceEquals(this.messageField, value) != true)) {
                    this.messageField = value;
                    this.RaisePropertyChanged("message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="fund", Namespace="http://schemas.datacontract.org/2004/07/WeerutTestWCFService.DTO")]
    [System.SerializableAttribute()]
    public partial class fund : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string fundIDField;
        
        private string fundNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string asOfDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> navField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> offerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> bidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string fundID {
            get {
                return this.fundIDField;
            }
            set {
                if ((object.ReferenceEquals(this.fundIDField, value) != true)) {
                    this.fundIDField = value;
                    this.RaisePropertyChanged("fundID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string fundName {
            get {
                return this.fundNameField;
            }
            set {
                if ((object.ReferenceEquals(this.fundNameField, value) != true)) {
                    this.fundNameField = value;
                    this.RaisePropertyChanged("fundName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string asOfDate {
            get {
                return this.asOfDateField;
            }
            set {
                if ((object.ReferenceEquals(this.asOfDateField, value) != true)) {
                    this.asOfDateField = value;
                    this.RaisePropertyChanged("asOfDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public System.Nullable<double> nav {
            get {
                return this.navField;
            }
            set {
                if ((this.navField.Equals(value) != true)) {
                    this.navField = value;
                    this.RaisePropertyChanged("nav");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public System.Nullable<double> offer {
            get {
                return this.offerField;
            }
            set {
                if ((this.offerField.Equals(value) != true)) {
                    this.offerField = value;
                    this.RaisePropertyChanged("offer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public System.Nullable<double> bid {
            get {
                return this.bidField;
            }
            set {
                if ((this.bidField.Equals(value) != true)) {
                    this.bidField = value;
                    this.RaisePropertyChanged("bid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="request", Namespace="http://schemas.datacontract.org/2004/07/WeerutTestWCFService.DTO")]
    [System.SerializableAttribute()]
    public partial class request : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private ThomsonReuters.Eikon.THFundWebApiApp.THFundService.fund fundField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ThomsonReuters.Eikon.THFundWebApiApp.THFundService.fund fund {
            get {
                return this.fundField;
            }
            set {
                if ((object.ReferenceEquals(this.fundField, value) != true)) {
                    this.fundField = value;
                    this.RaisePropertyChanged("fund");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="THFundService.ITHFundService")]
    public interface ITHFundService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITHFundService/GetTHLTFFundByID", ReplyAction="http://tempuri.org/ITHFundService/GetTHLTFFundByIDResponse")]
        ThomsonReuters.Eikon.THFundWebApiApp.THFundService.response GetTHLTFFundByID(string fundID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITHFundService/GetTHLTFFundByID", ReplyAction="http://tempuri.org/ITHFundService/GetTHLTFFundByIDResponse")]
        System.Threading.Tasks.Task<ThomsonReuters.Eikon.THFundWebApiApp.THFundService.response> GetTHLTFFundByIDAsync(string fundID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITHFundService/GetAllTHLTFFunds", ReplyAction="http://tempuri.org/ITHFundService/GetAllTHLTFFundsResponse")]
        ThomsonReuters.Eikon.THFundWebApiApp.THFundService.response GetAllTHLTFFunds();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITHFundService/GetAllTHLTFFunds", ReplyAction="http://tempuri.org/ITHFundService/GetAllTHLTFFundsResponse")]
        System.Threading.Tasks.Task<ThomsonReuters.Eikon.THFundWebApiApp.THFundService.response> GetAllTHLTFFundsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITHFundService/AddTHLTFFund", ReplyAction="http://tempuri.org/ITHFundService/AddTHLTFFundResponse")]
        ThomsonReuters.Eikon.THFundWebApiApp.THFundService.response AddTHLTFFund(ThomsonReuters.Eikon.THFundWebApiApp.THFundService.request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITHFundService/AddTHLTFFund", ReplyAction="http://tempuri.org/ITHFundService/AddTHLTFFundResponse")]
        System.Threading.Tasks.Task<ThomsonReuters.Eikon.THFundWebApiApp.THFundService.response> AddTHLTFFundAsync(ThomsonReuters.Eikon.THFundWebApiApp.THFundService.request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITHFundService/UpdateTHLTFFund", ReplyAction="http://tempuri.org/ITHFundService/UpdateTHLTFFundResponse")]
        ThomsonReuters.Eikon.THFundWebApiApp.THFundService.response UpdateTHLTFFund(string fundID, ThomsonReuters.Eikon.THFundWebApiApp.THFundService.request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITHFundService/UpdateTHLTFFund", ReplyAction="http://tempuri.org/ITHFundService/UpdateTHLTFFundResponse")]
        System.Threading.Tasks.Task<ThomsonReuters.Eikon.THFundWebApiApp.THFundService.response> UpdateTHLTFFundAsync(string fundID, ThomsonReuters.Eikon.THFundWebApiApp.THFundService.request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITHFundService/DeleteTHLTFFundByID", ReplyAction="http://tempuri.org/ITHFundService/DeleteTHLTFFundByIDResponse")]
        ThomsonReuters.Eikon.THFundWebApiApp.THFundService.response DeleteTHLTFFundByID(string fundID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITHFundService/DeleteTHLTFFundByID", ReplyAction="http://tempuri.org/ITHFundService/DeleteTHLTFFundByIDResponse")]
        System.Threading.Tasks.Task<ThomsonReuters.Eikon.THFundWebApiApp.THFundService.response> DeleteTHLTFFundByIDAsync(string fundID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITHFundServiceChannel : ThomsonReuters.Eikon.THFundWebApiApp.THFundService.ITHFundService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class THFundServiceClient : System.ServiceModel.ClientBase<ThomsonReuters.Eikon.THFundWebApiApp.THFundService.ITHFundService>, ThomsonReuters.Eikon.THFundWebApiApp.THFundService.ITHFundService {
        
        public THFundServiceClient() {
        }
        
        public THFundServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public THFundServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public THFundServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public THFundServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ThomsonReuters.Eikon.THFundWebApiApp.THFundService.response GetTHLTFFundByID(string fundID) {
            return base.Channel.GetTHLTFFundByID(fundID);
        }
        
        public System.Threading.Tasks.Task<ThomsonReuters.Eikon.THFundWebApiApp.THFundService.response> GetTHLTFFundByIDAsync(string fundID) {
            return base.Channel.GetTHLTFFundByIDAsync(fundID);
        }
        
        public ThomsonReuters.Eikon.THFundWebApiApp.THFundService.response GetAllTHLTFFunds() {
            return base.Channel.GetAllTHLTFFunds();
        }
        
        public System.Threading.Tasks.Task<ThomsonReuters.Eikon.THFundWebApiApp.THFundService.response> GetAllTHLTFFundsAsync() {
            return base.Channel.GetAllTHLTFFundsAsync();
        }
        
        public ThomsonReuters.Eikon.THFundWebApiApp.THFundService.response AddTHLTFFund(ThomsonReuters.Eikon.THFundWebApiApp.THFundService.request request) {
            return base.Channel.AddTHLTFFund(request);
        }
        
        public System.Threading.Tasks.Task<ThomsonReuters.Eikon.THFundWebApiApp.THFundService.response> AddTHLTFFundAsync(ThomsonReuters.Eikon.THFundWebApiApp.THFundService.request request) {
            return base.Channel.AddTHLTFFundAsync(request);
        }
        
        public ThomsonReuters.Eikon.THFundWebApiApp.THFundService.response UpdateTHLTFFund(string fundID, ThomsonReuters.Eikon.THFundWebApiApp.THFundService.request request) {
            return base.Channel.UpdateTHLTFFund(fundID, request);
        }
        
        public System.Threading.Tasks.Task<ThomsonReuters.Eikon.THFundWebApiApp.THFundService.response> UpdateTHLTFFundAsync(string fundID, ThomsonReuters.Eikon.THFundWebApiApp.THFundService.request request) {
            return base.Channel.UpdateTHLTFFundAsync(fundID, request);
        }
        
        public ThomsonReuters.Eikon.THFundWebApiApp.THFundService.response DeleteTHLTFFundByID(string fundID) {
            return base.Channel.DeleteTHLTFFundByID(fundID);
        }
        
        public System.Threading.Tasks.Task<ThomsonReuters.Eikon.THFundWebApiApp.THFundService.response> DeleteTHLTFFundByIDAsync(string fundID) {
            return base.Channel.DeleteTHLTFFundByIDAsync(fundID);
        }
    }
}
